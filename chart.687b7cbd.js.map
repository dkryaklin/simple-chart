{"version":3,"sources":["helpers.js","header.js","loading.js","switchers.js","navigator.js","axis-x.js","axis-y.js","lines.js","tooltip.js","chart-wrapper.js","chart.js"],"names":["DomHelper","className","target","html","el","document","createElement","innerHTML","appendChild","tag","createElementNS","setAttribute","SEARCH_ICON","STYLES","Header","props","setProps","style","shadow","header","div","title","onclick","zoomOut","headerDays","isZoomed","classList","add","remove","timeLine","length","startIndex","value","Math","floor","startRange","endIndex","ceil","endRange","startDate","Date","endDate","startDay","getDate","endDay","dayName","daysLabels","getDay","monthName","monthsLabels","getMonth","year","getFullYear","endMonthName","endYear","prevDaysVal","isUp","prevStartRange","addEventListener","removeChild","newProps","clearTimeout","timeout","setTimeout","range","render","Loading","loading","isLoading","CHECK_ICON","Switcher","line","switcher","onClick","hiddenLines","switcherBack","name","borderColor","color","backgroundColor","index","indexOf","id","splice","push","Switchers","switcherList","lines","map","switchers","zoomInit","forEach","update","NAV_HEIGHT","NAV_HEIGHT_INNER","NAV_STROKE_WIDTH","Navigator","mouseUp","event","mouseMove","navigator","clickedSide","stopPropagation","clickX","clientX","touches","clickProps","body","userSelect","startPixels","width","endPixels","diff","newEndPixels","newStartRange","newEndRange","diffRange","scaleRange","chartWidth","left","hoveredIndex","paths","path","navSvgWrapper","svg","scaleY","allMaxY","stacked","percentage","yScaled","yScaledAllMaxY","fixScaleY","type","navWrapper","transform","navSelector","onmousedown","mouseDown","ontouchstart","navClickLeft","navClickRight","renderLines","hideNavigator","requestAnimationFrame","AxisX","axisX","items","prev","blockWidth","blockAmount","i","position","date","getHours","getMinutes","substring","getBlockAmount","AxisY","isRight","axisY","axisItems","blockHeight","amountBlocks","chartHeight","maxY","toFixed","round","createItem","bottom","item","fillItems","yScaledRangeMaxY","rangeMaxY","updateAxis","STROKE_WIDTH","Lines","scaleX","updateScale","ARROW_ICON","Tooltip","tooltip","clickTooltip","mouseEnter","mouseLeave","selectedIndex","mouseClick","hover","zoomedIndex","chartRect","getBoundingClientRect","hoveredValue","positions","amount","prevClientX","chartIndent","abs","prevIndex","dateStr","column","allColumnData","prevValue","hoverItem","top","zIndex","ChartWrapper","chartWrapper","svgWrapper","message","newState","axisYright","updatePosition","height","marginTop","init","SimpleChart","state","attachShadow","mode","chart","HTMLElement","setState","maxCache","mapped","val","sort","a","b","allColumnDataCache","key","join","maxCacheLine","max","prevHiddenLines","inited","createCache","calculate","prevColumnsData","generatePath","prevState","prevAllColumnDataCache","zoomedDate","url","dataUrl","fetch","then","response","json","data","newZoomedState","y_scaled","columns","shift","colors","names","types","oldValue","newValue","isNight","getAttribute","parseInt","customElements","define"],"mappings":"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","file":"chart.687b7cbd.js","sourceRoot":"..\\src","sourcesContent":["export class DomHelper {\r\n    static div(className, target, html) {\r\n        const el = document.createElement('div');\r\n        el.className = className;\r\n\r\n        if (html) {\r\n            el.innerHTML = html;\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(el);\r\n        }\r\n\r\n        return el;\r\n    }\r\n\r\n    static svg(tag, target, className) {\r\n        const el = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n        if (className) {\r\n            el.setAttribute('class', className);\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(el);\r\n        }\r\n        return el;\r\n    }\r\n\r\n    static style(target, html) {\r\n        const el = document.createElement('style');\r\n\r\n        if (html) {\r\n            el.innerHTML = html;\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(el);\r\n        }\r\n\r\n        return el;\r\n    }\r\n}\r\n","import { DomHelper } from './helpers';\r\n\r\nconst SEARCH_ICON = '<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"fill: #48AAF0;\" viewBox=\"0 0 330 330\"><path d=\"M325.606 304.394L223.328 202.117c16.707-21.256 26.683-48.041 26.683-77.111C250.011 56.077 193.934 0 125.005 0 56.077 0 0 56.077 0 125.006 0 193.933 56.077 250.01 125.005 250.01c29.07 0 55.855-9.975 77.11-26.681l102.278 102.277c2.929 2.93 6.768 4.394 10.607 4.394s7.678-1.464 10.606-4.394c5.859-5.857 5.859-15.355 0-21.212zM30 125.006C30 72.619 72.619 30 125.005 30c52.387 0 95.006 42.619 95.006 95.005 0 52.386-42.619 95.004-95.006 95.004C72.619 220.01 30 177.391 30 125.006z\"/><path d=\"M175.01 110.006H75c-8.284 0-15 6.716-15 15s6.716 15 15 15h100.01c8.284 0 15-6.716 15-15s-6.716-15-15-15z\"/></svg>';\r\n\r\nconst STYLES = `\r\n    .header {\r\n        position: relative;\r\n        display: flex;\r\n        font-weight: 600;\r\n        align-items: center;\r\n        min-height: 50px;\r\n    }\r\n    .header.--zoomed > .header-title {\r\n        opacity: 0;\r\n        font-size: 8px;\r\n        transform: translateY(-30px);\r\n    }\r\n    .header.--zoomed > .header-zoom {\r\n        opacity: 1;\r\n        font-size: 15px;\r\n        transform: translateY(0);\r\n    }\r\n    .header-title {\r\n        flex-grow: 1;\r\n        line-height: 50px;\r\n        font-size: 15px;\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n        transition: 0.2s transform, 0.2s opacity, 0.2s font-size;\r\n    }\r\n    .header-zoom {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        font-size: 8px;\r\n        line-height: 50px;\r\n        color: #48AAF0;\r\n        display: flex;\r\n        align-items: center;\r\n        opacity: 0;\r\n        transform: translateY(30px);\r\n        transition: 0.2s transform, 0.2s opacity, 0.2s font-size;\r\n        cursor: pointer;\r\n    }\r\n    .header-zoom > svg {\r\n        margin-right: 10px;\r\n        width: 18px;\r\n        height: 18px;\r\n    }\r\n    .header-days {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 50px;\r\n        font-size: 13px;\r\n        flex-shrink: 0;\r\n    }\r\n    .header-days.--show-down {\r\n        animation: show-up 0.2s 1 ease-in-out;\r\n    }\r\n    .header-days.--show-up {\r\n        animation: show-down 0.2s 1 ease-in-out;\r\n    }\r\n    .header-days.--hide-down {\r\n        animation: hide-up 0.2s 1 ease-in-out;\r\n    }\r\n    .header-days.--hide-up {\r\n        animation: hide-down 0.2s 1 ease-in-out;\r\n    }\r\n    @keyframes show-up {\r\n        0% {transform:translateY(-30px);opacity:0;font-size:7px;}\r\n        100%{transform:translateY(0);opacity:1;font-size:13px;}\r\n    }\r\n    @keyframes show-down {\r\n        0% {transform:translateY(30px);opacity:0;font-size:7px;}\r\n        100%{transform:translateY(0);opacity:1;font-size:13px;}\r\n    }\r\n    @keyframes hide-up {\r\n        0% {transform:translateY(0);opacity:1;font-size:13px;}\r\n        100%{transform:translateY(-30px);opacity:0;font-size:7px;}\r\n    }\r\n    @keyframes hide-down {\r\n        0% {transform:translateY(0);opacity:1;font-size:13px;}\r\n        100%{transform:translateY(30px);opacity:0;font-size:7px;}\r\n    }\r\n`;\r\n\r\nexport class Header {\r\n    constructor(props, setProps) {\r\n        this.setProps = setProps;\r\n\r\n        DomHelper.style(props.shadow, STYLES);\r\n        this.header = DomHelper.div('header', props.target);\r\n    }\r\n\r\n    render(props) {\r\n        this.title = DomHelper.div('header-title', this.header, props.title);\r\n        const headerZoom = DomHelper.div('header-zoom', this.header, `${SEARCH_ICON}Zoom out`);\r\n        headerZoom.onclick = () => this.zoomOut();\r\n\r\n        this.headerDays = DomHelper.div('header-days', this.header);\r\n    }\r\n\r\n    zoomOut() {\r\n        this.setProps({\r\n            isZoomed: false,\r\n        });\r\n    }\r\n\r\n    isZoomed(props) {\r\n        if (props.isZoomed) {\r\n            this.header.classList.add('--zoomed');\r\n        } else {\r\n            this.header.classList.remove('--zoomed');\r\n        }\r\n    }\r\n\r\n    range(props) {\r\n        const { timeLine } = props;\r\n        if (!timeLine || !timeLine.length) {\r\n            this.headerDays.innerHTML = null;\r\n            return;\r\n        }\r\n\r\n        const startIndex = Math.floor(timeLine.length * props.startRange / 100);\r\n        const endIndex = Math.ceil(timeLine.length * props.endRange / 100);\r\n\r\n        const startDate = new Date(timeLine[startIndex]);\r\n        const endDate = new Date(timeLine[endIndex - 1]);\r\n\r\n        const startDay = startDate.getDate();\r\n        const endDay = endDate.getDate();\r\n\r\n        let value;\r\n        if (timeLine[endIndex - 1] - timeLine[startIndex] < 25 * 60 * 60 * 1000 && startDay === endDay) {\r\n            const dayName = props.daysLabels[startDate.getDay()];\r\n            const monthName = props.monthsLabels[startDate.getMonth()];\r\n            const year = startDate.getFullYear();\r\n\r\n            value = `${dayName}, ${startDay} ${monthName} ${year}`;\r\n        } else {\r\n            const monthName = props.monthsLabels[startDate.getMonth()];\r\n            const endMonthName = props.monthsLabels[endDate.getMonth()];\r\n            const year = startDate.getFullYear();\r\n            const endYear = endDate.getFullYear();\r\n\r\n            value = `${startDay} ${monthName} ${year} - ${endDay} ${endMonthName} ${endYear}`;\r\n        }\r\n\r\n        if (value !== this.prevDaysVal && this.prevDaysVal) {\r\n            this.prevDaysVal = value;\r\n\r\n            const isUp = props.startRange > this.prevStartRange;\r\n            this.prevStartRange = props.startRange;\r\n\r\n            const headerDays = DomHelper.div(`header-days ${isUp ? '--show-up' : '--show-down'}`, this.header, value);\r\n\r\n            this.headerDays.addEventListener('animationend', () => {\r\n                this.header.removeChild(this.headerDays);\r\n                this.headerDays = headerDays;\r\n            });\r\n\r\n            this.headerDays.classList.add(!isUp ? '--hide-up' : '--hide-down');\r\n        } else {\r\n            this.prevDaysVal = value;\r\n            this.headerDays.innerHTML = value;\r\n        }\r\n    }\r\n\r\n    update(newProps) {\r\n        this.isZoomed(newProps);\r\n\r\n        clearTimeout(this.timeout);\r\n        this.timeout = setTimeout(() => {\r\n            this.range(newProps);\r\n        }, 50);\r\n    }\r\n\r\n    init(newProps) {\r\n        this.render(newProps);\r\n        this.range(newProps);\r\n    }\r\n}\r\n","import { DomHelper } from './helpers';\r\n\r\nconst STYLES = `\r\n    .loading{\r\n        display: flex;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        font-size: 25px;\r\n        align-items: center;\r\n        justify-content: center;\r\n        opacity: 0;\r\n        transform: translateY(-30px);\r\n        transition: 0.2s transform, 0.2s opacity;\r\n        pointer-events: none;\r\n    }\r\n    .loading.--visible {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n`;\r\n\r\nexport class Loading {\r\n    constructor(props, setProps) {\r\n        this.setProps = setProps;\r\n\r\n        DomHelper.style(props.shadow, STYLES);\r\n        this.loading = DomHelper.div('loading', props.target, 'Loading...');\r\n        this.isLoading(props);\r\n    }\r\n\r\n    isLoading(props) {\r\n        if (props.isLoading) {\r\n            this.loading.classList.add('--visible');\r\n        } else {\r\n            this.loading.classList.remove('--visible');\r\n        }\r\n    }\r\n\r\n    update(newProps) {\r\n        this.isLoading(newProps);\r\n    }\r\n\r\n    init(newProps) {\r\n        this.isLoading(newProps);\r\n    }\r\n}\r\n","import { DomHelper } from './helpers';\r\n\r\nconst CHECK_ICON = '<svg class=\"icon\" style=\"margin-right:6px; width: 12px; height: 12px;vertical-align: middle;fill: #fff;overflow: hidden;\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M896 143.8c-34.6-26.8-83-18.6-108.2 18.2L428 688.4l-198.2-214.6c-29.2-33.2-78.2-34.8-109.4-3.6-31.2 31-32.8 83.2-3.4 116.2 0 0 240.8 267.2 275.4 294 34.6 26.8 83 18.6 108.2-18.2l412.6-603.4C938.4 221.8 930.6 170.4 896 143.8z\" /></svg>';\r\n\r\nconst STYLES = `\r\n    .switchers {\r\n        margin-top: 17px;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        opacity: 1;\r\n        transition: 0.2s opacity;\r\n    }\r\n    .switchers.--off {\r\n        opacity: 0;\r\n        pointer-events: none;\r\n    }\r\n    .switchers.--abs {\r\n        position:relative;\r\n        margin-top: -40px;\r\n    }\r\n    .switcher {\r\n        height: 36px;\r\n        border-radius: 18px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        font-size: 11px;\r\n        font-weight: 600;\r\n        position: relative;\r\n        cursor: pointer;\r\n        margin: 6px;\r\n        flex-shrink: 0;\r\n        white-space: nowrap;\r\n    }\r\n    .switcher.--off .switcher-front {\r\n        opacity: 0;\r\n        transform: translateY(-30px);\r\n        pointer-events: none;\r\n    }\r\n    .switcher-back {\r\n        padding: 0 24px;\r\n        line-height: 32px;\r\n        border: 2px solid;\r\n        border-radius: 18px;\r\n        white-space: nowrap;\r\n    }\r\n    .switcher-front {\r\n        white-space: nowrap;\r\n        border-radius: 18px;\r\n        left: 0;\r\n        top: 0;\r\n        position: absolute;\r\n        padding: 0 17px;\r\n        line-height: 36px;\r\n        color: #fff;\r\n        display: flex;\r\n        align-items: center;\r\n        transform: translateY(0px);\r\n        opacity: 1;\r\n        transition: 0.3s transform, 0.3s opacity;\r\n    }\r\n`;\r\n\r\nclass Switcher {\r\n    constructor(line, props, setProps) {\r\n        this.line = line;\r\n        this.props = props;\r\n        this.setProps = setProps;\r\n\r\n        this.switcher = DomHelper.div('switcher', this.props.target);\r\n        this.switcher.onclick = () => this.onClick();\r\n        this.hiddenLines(this.props);\r\n\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        const switcherBack = DomHelper.div('switcher-back', this.switcher, this.line.name);\r\n        switcherBack.style.borderColor = this.line.color;\r\n        switcherBack.style.color = this.line.color;\r\n\r\n        const switcherFront = DomHelper.div('switcher-front', this.switcher, `${CHECK_ICON}${this.line.name}`);\r\n        switcherFront.style.backgroundColor = this.line.color;\r\n    }\r\n\r\n    onClick() {\r\n        const hiddenLines = [...this.props.hiddenLines];\r\n        const index = hiddenLines.indexOf(this.line.id);\r\n        if (index > -1) {\r\n            hiddenLines.splice(index, 1);\r\n        } else {\r\n            hiddenLines.push(this.line.id);\r\n        }\r\n\r\n        this.setProps({ hiddenLines });\r\n    }\r\n\r\n    hiddenLines(props) {\r\n        const index = props.hiddenLines.indexOf(this.line.id);\r\n        if (index > -1) {\r\n            this.switcher.classList.add('--off');\r\n        } else {\r\n            this.switcher.classList.remove('--off');\r\n        }\r\n    }\r\n\r\n    update(newProps) {\r\n        this.hiddenLines(newProps);\r\n        this.props = newProps;\r\n    }\r\n}\r\n\r\nexport class Switchers {\r\n    constructor(props, setProps) {\r\n        this.target = props.target;\r\n        this.setProps = setProps;\r\n\r\n        DomHelper.style(props.shadow, STYLES);\r\n    }\r\n\r\n    render(props) {\r\n        this.switcherList = props.lines.map(line => new Switcher(line, { ...props, target: this.switchers }, this.setProps));\r\n    }\r\n\r\n    update(newProps) {\r\n        if (newProps.zoomInit) {\r\n            if (newProps.lines.length === 1) {\r\n                this.switchers.classList.add('--off');\r\n            } else {\r\n                this.switchers.classList.remove('--off');\r\n            }\r\n            this.switchers.innerHTML = null;\r\n            this.render(newProps);\r\n        }\r\n\r\n        this.switcherList.forEach((switcher) => {\r\n            switcher.update(newProps);\r\n        });\r\n    }\r\n\r\n    init(newProps) {\r\n        this.switchers = DomHelper.div(`switchers ${newProps.lines.length === 1 ? '--abs --off' : ''}`, this.target);\r\n        this.render(newProps);\r\n    }\r\n}\r\n","import { DomHelper } from './helpers';\r\n\r\nconst NAV_HEIGHT = 40;\r\nconst NAV_HEIGHT_INNER = 38;\r\nconst NAV_STROKE_WIDTH = 2;\r\n\r\nconst STYLES = `\r\n    .navigator {\r\n        height: ${NAV_HEIGHT}px;\r\n        border-radius: 5px;\r\n        overflow: hidden;\r\n        position:relative;\r\n        opacity: 1;\r\n        transition: 0.2s opacity;\r\n    }\r\n    .navigator.--off {\r\n        opacity: 0;\r\n        pointer-events: none;\r\n    }\r\n    .nav-wrapper {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    .nav-left, .nav-right {\r\n        background-color: #E2EEF9;\r\n        opacity: 0.6;\r\n        height: ${NAV_HEIGHT_INNER}px;\r\n        flex-shrink:0;\r\n        width: 100%;\r\n        transform: translateX(5px);\r\n    }\r\n    .--night .nav-left, .--night .nav-right {\r\n        background-color: #304259;\r\n    }\r\n    .nav-right {\r\n        transform: translateX(-5px);\r\n    }\r\n    .nav-right {\r\n        flex-shrink:0;\r\n        width: 100%;\r\n        height: ${NAV_HEIGHT_INNER}px;\r\n        background-color: #E2EEF9;\r\n        opacity: 0.6;\r\n    }\r\n    .nav-selector {\r\n        flex-shrink:0;\r\n        height: ${NAV_HEIGHT_INNER}px;\r\n        border: 1px solid #C0D1E1;\r\n        border-left-width: 10px;\r\n        border-right-width: 10px;\r\n        border-radius: 5px;\r\n        z-index: 1;\r\n        cursor: pointer;\r\n        position:relative;\r\n    }\r\n    .--night .nav-selector {\r\n        border-color: #56626D;\r\n    }\r\n    .nav-selector:before, .nav-selector:after {\r\n        content: '';\r\n        position: absolute;\r\n        left: -6px;\r\n        top: 15px;\r\n        width:2px;\r\n        height:10px;\r\n        background-color:#fff;\r\n        border-radius: 2px;\r\n    }\r\n    .nav-selector:after {\r\n        left: auto;\r\n        right: -6px;\r\n    }\r\n    .nav-click-left, .nav-click-right {\r\n        position: absolute;\r\n        left: -38px;\r\n        width: 40px;\r\n        top: 0;\r\n        height: 100%;\r\n    }\r\n    .nav-click-right {\r\n        left: auto;\r\n        right: -38px;\r\n    }\r\n    .nav-svg-wrapper {\r\n        border-radius: 5px;\r\n        overflow: hidden;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 1px;\r\n        width: 100%;\r\n        height: ${NAV_HEIGHT_INNER}px;\r\n        overflow: hidden;\r\n        transform: scale(1, -1);\r\n    }\r\n    .nav-svg {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n    .nav-svg-path {\r\n        vector-effect: non-scaling-stroke;\r\n        stroke-width: ${NAV_STROKE_WIDTH};\r\n        opacity: 1;\r\n        transition: 0.2s opacity;\r\n    }\r\n    .nav-svg-path.--off {\r\n        opacity: 0;\r\n    }\r\n`;\r\n\r\nexport class Navigator {\r\n    constructor(props, setProps) {\r\n        this.setProps = setProps;\r\n\r\n        document.addEventListener('mouseup', () => this.mouseUp());\r\n        document.addEventListener('mousemove', event => this.mouseMove(event));\r\n\r\n        document.addEventListener('touchend', () => this.mouseUp());\r\n        document.addEventListener('touchmove', event => this.mouseMove(event));\r\n\r\n        DomHelper.style(props.shadow, STYLES);\r\n        this.navigator = DomHelper.div('navigator', props.target);\r\n    }\r\n\r\n    mouseDown(event, clickedSide) {\r\n        event.stopPropagation();\r\n\r\n        this.clickX = typeof event.clientX === 'number' ? event.clientX : event.touches[0].clientX;\r\n        this.clickProps = this.props;\r\n        this.clickedSide = clickedSide;\r\n\r\n        document.body.style.userSelect = 'none';\r\n    }\r\n\r\n    mouseUp() {\r\n        document.body.style.userSelect = '';\r\n        this.clickX = null;\r\n    }\r\n\r\n    mouseMove(event) {\r\n        if (typeof this.clickX !== 'number') {\r\n            return;\r\n        }\r\n\r\n        const startPixels = this.clickProps.width * this.clickProps.startRange / 100;\r\n        const endPixels = this.clickProps.width * this.clickProps.endRange / 100;\r\n\r\n        const diff = (typeof event.clientX === 'number' ? event.clientX : event.touches[0].clientX) - this.clickX;\r\n\r\n        const newStartPixels = startPixels + diff;\r\n        const newEndPixels = endPixels + diff;\r\n\r\n        let newStartRange = newStartPixels * 100 / this.clickProps.width;\r\n        let newEndRange = newEndPixels * 100 / this.clickProps.width;\r\n        const diffRange = newEndRange - newStartRange;\r\n\r\n        let newProps;\r\n        if (this.clickedSide === 1) {\r\n            if (newStartRange < 0) {\r\n                newStartRange = 0;\r\n            }\r\n            if (newStartRange + 10 > this.clickProps.endRange) {\r\n                newStartRange = this.clickProps.endRange - 10;\r\n            }\r\n            if (newStartRange === this.clickProps.startRange) {\r\n                return;\r\n            }\r\n            newProps = { startRange: newStartRange, endRange: this.clickProps.endRange };\r\n        } else if (this.clickedSide === 3) {\r\n            if (newEndRange > 100) {\r\n                newEndRange = 100;\r\n            }\r\n            if (newEndRange - 10 < this.clickProps.startRange) {\r\n                newEndRange = this.clickProps.startRange + 10;\r\n            }\r\n            if (newEndRange === this.clickProps.newEndRange) {\r\n                return;\r\n            }\r\n            newProps = { endRange: newEndRange, startRange: this.clickProps.startRange };\r\n        } else {\r\n            if (newStartRange < 0) {\r\n                newStartRange = 0;\r\n                newEndRange = diffRange;\r\n            }\r\n            if (newEndRange > 100) {\r\n                newEndRange = 100;\r\n                newStartRange = 100 - diffRange;\r\n            }\r\n            if (newStartRange === this.clickProps.startRange) {\r\n                return;\r\n            }\r\n            newProps = { startRange: newStartRange, endRange: newEndRange };\r\n        }\r\n\r\n        if (newProps.startRange === this.clickProps.startRange && newProps.endRange === this.clickProps.endRange) {\r\n            return;\r\n        }\r\n\r\n        newProps.scaleRange = (newProps.endRange - newProps.startRange) / 100;\r\n        newProps.chartWidth = this.clickProps.width / newProps.scaleRange;\r\n        newProps.left = newProps.chartWidth * newProps.startRange / 100;\r\n        newProps.hoveredIndex = null;\r\n        this.setProps(newProps);\r\n    }\r\n\r\n    hiddenLines(props) {\r\n        props.lines.forEach((line) => {\r\n            if (props.hiddenLines.indexOf(line.id) > -1) {\r\n                this.paths[line.id].path.classList.add('--off');\r\n            } else {\r\n                this.paths[line.id].path.classList.remove('--off');\r\n            }\r\n        });\r\n    }\r\n\r\n    renderLines(props) {\r\n        this.navSvgWrapper.innerHTML = null;\r\n        this.svg = DomHelper.svg('svg', this.navSvgWrapper, 'nav-svg');\r\n        this.svg.setAttribute('width', props.width);\r\n        this.svg.setAttribute('height', NAV_HEIGHT_INNER);\r\n\r\n        this.paths = {};\r\n        let scaleY = (NAV_HEIGHT_INNER - NAV_STROKE_WIDTH) / props.allMaxY;\r\n\r\n        for (let index = 0; index < props.lines.length; index += 1) {\r\n            let line = props.lines[index];\r\n            if (props.stacked || props.percentage) {\r\n                line = props.lines[props.lines.length - 1 - index];\r\n            }\r\n\r\n            if (props.yScaled && index === props.lines.length - 1) {\r\n                scaleY = (NAV_HEIGHT_INNER - NAV_STROKE_WIDTH) / props.yScaledAllMaxY;\r\n            }\r\n\r\n            const path = DomHelper.svg('path', this.svg, 'nav-svg-path');\r\n\r\n            path.setAttribute('d', line.path);\r\n            path.setAttribute('transform', `scale(1,${scaleY * line.fixScaleY})`);\r\n            path.setAttribute('stroke', line.color);\r\n\r\n            if (line.type === 'area' || line.type === 'bar') {\r\n                path.setAttribute('fill', line.color);\r\n            } else {\r\n                path.setAttribute('fill', 'none');\r\n            }\r\n\r\n            this.paths[line.id] = { path };\r\n        }\r\n\r\n        this.navWrapper.style.transform = `translateX(-${100 - props.startRange}%)`;\r\n        this.navSelector.style.width = `calc(${props.endRange - props.startRange}% - 20px)`;\r\n    }\r\n\r\n    render() {\r\n        this.navSvgWrapper = DomHelper.div('nav-svg-wrapper', this.navigator);\r\n        this.navWrapper = DomHelper.div('nav-wrapper', this.navigator);\r\n\r\n        DomHelper.div('nav-left', this.navWrapper);\r\n        this.navSelector = DomHelper.div('nav-selector', this.navWrapper);\r\n        this.navSelector.onmousedown = event => this.mouseDown(event, 2);\r\n        this.navSelector.ontouchstart = event => this.mouseDown(event, 2);\r\n\r\n        DomHelper.div('nav-right', this.navWrapper);\r\n\r\n        this.navClickLeft = DomHelper.div('nav-click-left', this.navSelector);\r\n        this.navClickLeft.onmousedown = event => this.mouseDown(event, 1);\r\n        this.navClickLeft.ontouchstart = event => this.mouseDown(event, 1);\r\n\r\n        this.navClickRight = DomHelper.div('nav-click-right', this.navSelector);\r\n        this.navClickRight.onmousedown = event => this.mouseDown(event, 3);\r\n        this.navClickRight.ontouchstart = event => this.mouseDown(event, 3);\r\n    }\r\n\r\n    range(props) {\r\n        this.navWrapper.style.transform = `translateX(-${100 - props.startRange}%)`;\r\n        this.navSelector.style.width = `calc(${props.endRange - props.startRange}% - 20px)`;\r\n\r\n        let scaleY = (NAV_HEIGHT_INNER - NAV_STROKE_WIDTH) / props.allMaxY;\r\n\r\n        if (props.stacked || props.percentage || props.zoomInit) {\r\n            for (let index = 0; index < props.lines.length; index += 1) {\r\n                let line = props.lines[index];\r\n                if (props.stacked || props.percentage) {\r\n                    line = props.lines[props.lines.length - 1 - index];\r\n                }\r\n\r\n                if (props.yScaled && index === props.lines.length - 1) {\r\n                    scaleY = (NAV_HEIGHT_INNER - NAV_STROKE_WIDTH) / props.yScaledAllMaxY;\r\n                }\r\n\r\n                if (props.hiddenLines.indexOf(line.id) === -1) {\r\n                    this.paths[line.id].path.setAttribute('d', line.path);\r\n                    this.paths[line.id].path.setAttribute('transform', `scale(1,${scaleY * line.fixScaleY})`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update(newProps) {\r\n        if (newProps.zoomInit) {\r\n            this.renderLines(newProps);\r\n            if (newProps.hideNavigator) {\r\n                this.navigator.classList.add('--off');\r\n            } else {\r\n                this.navigator.classList.remove('--off');\r\n            }\r\n        }\r\n\r\n        this.hiddenLines(newProps);\r\n\r\n        requestAnimationFrame(() => {\r\n            this.range(newProps);\r\n            this.props = newProps;\r\n        });\r\n    }\r\n\r\n    init(newProps) {\r\n        this.render();\r\n        this.renderLines(newProps);\r\n        this.props = newProps;\r\n    }\r\n}\r\n","import { DomHelper } from './helpers';\r\n\r\nconst STYLES = `\r\n    .axis-x {\r\n        line-height: 25px;\r\n        color: #8E8E93;\r\n        font-size: 9px;\r\n        display: flex;\r\n        position: absolute;\r\n        left: 0;\r\n        height: 25px;\r\n        bottom: 10px;\r\n    }\r\n    .axis-x-item {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        margin-left: -30px;\r\n        text-align: center;\r\n        width: 60px;\r\n        transition: 0.2s opacity;\r\n    }\r\n    .axis-x-item.--show {\r\n        animation: axis-x-show 0.2s 1 ease-in-out;\r\n    }\r\n    .axis-x-item.--hide {\r\n        animation: axis-x-hide 0.2s 1 ease-in-out;\r\n    }\r\n    @keyframes axis-x-show {\r\n        0% {opacity:0;}\r\n        100%{opacity:1;}\r\n    }\r\n    @keyframes axis-x-hide {\r\n        0% {opacity:1;}\r\n        100%{opacity:0;}\r\n    }\r\n`;\r\n\r\nexport class AxisX {\r\n    constructor(props, setProps) {\r\n        this.setProps = setProps;\r\n        this.target = props.target;\r\n\r\n        DomHelper.style(props.shadow, STYLES);\r\n        this.axisX = DomHelper.div('axis-x', this.target);\r\n        this.items = [];\r\n    }\r\n\r\n    render(props) {\r\n        const blockWidth = props.chartWidth / this.blockAmount;\r\n\r\n        let prev;\r\n        for (let i = 0; i < props.timeLine.length; i += 1) {\r\n            const position = i * props.chartWidth / (props.timeLine.length - 1);\r\n\r\n            if ((!prev && prev !== 0) || prev + blockWidth < position) {\r\n                if (!this.items[i]) {\r\n                    const date = new Date(props.timeLine[i]);\r\n                    let value;\r\n                    if (props.isZoomed) {\r\n                        value = `${date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`}:${date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`}`;\r\n                    } else {\r\n                        value = `${date.getDate()} ${props.monthsLabels[date.getMonth()].substring(0, 3)}`;\r\n                    }\r\n\r\n                    this.items[i] = DomHelper.div('axis-x-item --show', this.axisX, value);\r\n                } else {\r\n                    this.items[i].classList.remove('--hide');\r\n                    this.items[i].classList.add('--show');\r\n                }\r\n\r\n                this.items[i].style.left = `${position}px`;\r\n\r\n                prev = position;\r\n            } else if (this.items[i]) {\r\n                this.items[i].style.left = `${position}px`;\r\n                this.items[i].classList.remove('--show');\r\n\r\n                this.items[i].addEventListener('animationend', () => {\r\n                    if (this.items[i]) {\r\n                        this.axisX.removeChild(this.items[i]);\r\n                        this.items[i] = null;\r\n                    }\r\n                });\r\n                this.items[i].classList.add('--hide');\r\n            }\r\n        }\r\n    }\r\n\r\n    getBlockAmount(props) {\r\n        if (props.chartWidth / this.blockAmount > 90) {\r\n            this.blockAmount *= 2;\r\n        }\r\n        if (props.chartWidth / this.blockAmount < 45) {\r\n            this.blockAmount *= 0.5;\r\n        }\r\n    }\r\n\r\n    update(newProps) {\r\n        if (newProps.zoomInit) {\r\n            this.axisX.innerHTML = null;\r\n            this.items = [];\r\n\r\n            this.blockAmount = 2;\r\n            while (newProps.chartWidth / this.blockAmount * 2 > 90) {\r\n                this.blockAmount *= 2;\r\n            }\r\n        }\r\n\r\n        this.getBlockAmount(newProps);\r\n        this.render(newProps);\r\n    }\r\n\r\n    init(newProps) {\r\n        this.blockAmount = 2;\r\n        while (newProps.chartWidth / this.blockAmount * 2 > 90) {\r\n            this.blockAmount *= 2;\r\n        }\r\n        this.getBlockAmount(newProps);\r\n        this.render(newProps);\r\n    }\r\n}\r\n","import { DomHelper } from './helpers';\r\n\r\nconst STYLES = `\r\n    .axis-y {\r\n        position: absolute;\r\n        left: 16px;\r\n        top: 0;\r\n        bottom: 35px;\r\n        right: 16px;\r\n        opacity: 1;\r\n        transition: 0.2s opacity;\r\n        pointer-events: none;\r\n        z-index: 1000;\r\n    }\r\n    .axis-y.--off {\r\n        opacity: 0;\r\n    }\r\n    .--night .axis-y-item {\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n    .axis-y-item {\r\n        position: absolute;\r\n        left: 0;\r\n        right: 0;\r\n        border-bottom: 1px solid rgba(24, 45, 59, 0.1);\r\n        line-height: 20px;\r\n        font-size: 9px;\r\n        color: #8E8E93;\r\n    }\r\n    .axis-y-item.--right {\r\n        text-align: end;\r\n        border-bottom: 1px solid rgba(24, 45, 59, 0.05);\r\n    }\r\n    .--night .axis-y-item.--right {\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0.05);\r\n    }\r\n    .axis-y-items {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        bottom: 0;\r\n        right: 0;\r\n    }\r\n    .axis-y-items.--show-down {\r\n        animation: axis-show-up 0.2s 1 ease-in-out;\r\n    }\r\n    .axis-y-items.--show-up {\r\n        animation: axis-show-down 0.2s 1 ease-in-out;\r\n    }\r\n    .axis-y-items.--hide-down {\r\n        animation: axis-hide-up 0.2s 1 ease-in-out;\r\n    }\r\n    .axis-y-items.--hide-up {\r\n        animation: axis-hide-down 0.2s 1 ease-in-out;\r\n    }\r\n    @keyframes axis-show-up {\r\n        0% {transform:translateY(-30px);opacity:0;}\r\n        100%{transform:translateY(0);opacity:1;}\r\n    }\r\n    @keyframes axis-show-down {\r\n        0% {transform:translateY(30px);opacity:0;}\r\n        100%{transform:translateY(0);opacity:1;}\r\n    }\r\n    @keyframes axis-hide-up {\r\n        0% {transform:translateY(0);opacity:1;}\r\n        100%{transform:translateY(-30px);opacity:0;}\r\n    }\r\n    @keyframes axis-hide-down {\r\n        0% {transform:translateY(0);opacity:1;}\r\n        100%{transform:translateY(30px);opacity:0;}\r\n    }\r\n`;\r\n\r\nexport class AxisY {\r\n    constructor(props, setProps, isRight) {\r\n        this.isRight = isRight;\r\n        this.setProps = setProps;\r\n\r\n        DomHelper.style(props.shadow, STYLES);\r\n        this.axisY = DomHelper.div('axis-y', props.target);\r\n    }\r\n\r\n    fillItems(axisItems, props) {\r\n        let blockHeight;\r\n        let amountBlocks;\r\n        if (props.percentage) {\r\n            amountBlocks = 5;\r\n            blockHeight = (props.chartHeight) / (amountBlocks - 1);\r\n        } else {\r\n            amountBlocks = 6;\r\n            blockHeight = (props.chartHeight - 20) / (amountBlocks - 1);\r\n        }\r\n\r\n        const scaleY = props.chartHeight / this.maxY;\r\n\r\n        for (let i = 1; i < amountBlocks; i += 1) {\r\n            let value = i * blockHeight / scaleY;\r\n\r\n            if (value > 1000000) {\r\n                value = `${(value / 1000000).toFixed(2)}KK`;\r\n            } else if (value > 1000) {\r\n                value = `${(value / 1000).toFixed(2)}K`;\r\n            } else {\r\n                value = `${Math.round(value)}`;\r\n            }\r\n\r\n            if (props.percentage) {\r\n                value = `${Math.round(i * 100 / (amountBlocks - 1))}`;\r\n            }\r\n\r\n            const axisItem = this.createItem(props, axisItems, value);\r\n            axisItem.style.bottom = i * blockHeight;\r\n        }\r\n    }\r\n\r\n    createItem(props, target, value) {\r\n        const item = DomHelper.div(`axis-y-item${this.isRight ? ' --right' : ''}`, target, value);\r\n        if (props.yScaled && !this.isRight) {\r\n            item.style.color = props.lines[0].color;\r\n        } else if (props.yScaled) {\r\n            item.style.color = props.lines[props.lines.length - 1].color;\r\n        }\r\n        return item;\r\n    }\r\n\r\n    updateAxis(props, isUp) {\r\n        const axisItems = DomHelper.div(`axis-y-items ${isUp ? '--show-up' : '--show-down'}`, this.axisY);\r\n        this.fillItems(axisItems, props);\r\n\r\n        this.axisItems.addEventListener('animationend', () => {\r\n            this.axisY.removeChild(this.axisItems);\r\n            this.axisItems = axisItems;\r\n        });\r\n\r\n        this.axisItems.classList.add(!isUp ? '--hide-up' : '--hide-down');\r\n    }\r\n\r\n    update(newProps) {\r\n        if (this.isRight && !newProps.yScaled) {\r\n            return;\r\n        }\r\n\r\n        if (newProps.lines.length === newProps.hiddenLines.length ||\r\n            (this.isRight && newProps.yScaled && newProps.hiddenLines.indexOf(newProps.lines[newProps.lines.length - 1].id) > -1) ||\r\n            (!this.isRight && newProps.yScaled && newProps.lines.length - 1 === newProps.hiddenLines.length && newProps.hiddenLines.indexOf(newProps.lines[newProps.lines.length - 1].id) === -1)) {\r\n            this.axisY.classList.add('--off');\r\n        } else {\r\n            this.axisY.classList.remove('--off');\r\n        }\r\n\r\n        clearTimeout(this.timeout);\r\n        this.timeout = setTimeout(() => {\r\n            const maxY = !this.isRight ? newProps.rangeMaxY : newProps.yScaledRangeMaxY;\r\n            if (maxY === this.maxY) {\r\n                return;\r\n            }\r\n\r\n            const isUp = maxY < this.maxY;\r\n            this.maxY = maxY;\r\n\r\n            this.updateAxis(newProps, isUp);\r\n        }, 50);\r\n    }\r\n\r\n    init(newProps) {\r\n        if (this.isRight && !newProps.yScaled) {\r\n            this.axisY.classList.add('--off');\r\n            return;\r\n        }\r\n\r\n        this.maxY = !this.isRight ? newProps.rangeMaxY : newProps.yScaledRangeMaxY;\r\n\r\n        const item0 = this.createItem(newProps, this.axisY, '0');\r\n        item0.style.bottom = 0;\r\n\r\n        this.axisItems = DomHelper.div('axis-y-items', this.axisY);\r\n        this.fillItems(this.axisItems, newProps);\r\n    }\r\n}\r\n","import { DomHelper } from './helpers';\r\n\r\nconst STROKE_WIDTH = 3;\r\n\r\nconst STYLES = `\r\n    .lines-svg {\r\n        opacity: 1;\r\n        transition: 0.2s opacity;\r\n        transform: scale(1, -1);\r\n    }\r\n    .lines-svg.--hover {\r\n        opacity: 0.5;\r\n    }\r\n    .line-svg-path {\r\n        vector-effect: non-scaling-stroke;\r\n        opacity: 1;\r\n        stroke-width: ${STROKE_WIDTH};\r\n        transition: 0.2s opacity;\r\n    }\r\n    .line-svg-path.--off {\r\n        opacity: 0;\r\n    }\r\n`;\r\n\r\nexport class Lines {\r\n    constructor(props, setProps) {\r\n        this.setProps = setProps;\r\n        this.target = props.target;\r\n\r\n        DomHelper.style(props.shadow, STYLES);\r\n        this.svg = DomHelper.svg('svg', this.target, 'lines-svg');\r\n    }\r\n\r\n    render(props) {\r\n        this.svg.setAttribute('width', props.chartWidth);\r\n        this.svg.setAttribute('height', props.chartHeight);\r\n\r\n        // const scaleY = maxY / this.maxY;\r\n        // const viewBoxHeight = props.chartHeight * scaleY;\r\n\r\n        // this.prevValueTop = props.chartHeight - viewBoxHeight;\r\n        // this.prevValueHeight = props.chartHeight * scaleY;\r\n        // this.keyIndex = 0;\r\n\r\n        // this.svg.setAttribute('viewBox', `0 ${this.prevValueTop} ${props.width} ${this.prevValueHeight}`);\r\n\r\n        this.paths = {};\r\n        this.svg.innerHTML = null;\r\n        let scaleY = props.chartHeight / props.rangeMaxY;\r\n        const scaleX = props.width / props.chartWidth;\r\n\r\n        for (let index = 0; index < props.lines.length; index += 1) {\r\n            let line = props.lines[index];\r\n            if (props.stacked || props.percentage) {\r\n                line = props.lines[props.lines.length - 1 - index];\r\n            }\r\n\r\n            if (props.yScaled && index === props.lines.length - 1) {\r\n                scaleY = props.chartHeight / props.yScaledRangeMaxY;\r\n            }\r\n\r\n            const path = DomHelper.svg('path', this.svg, 'line-svg-path');\r\n\r\n            path.setAttribute('d', line.path);\r\n            path.setAttribute('transform', `scale(${1 / scaleX},${scaleY * line.fixScaleY})`);\r\n            path.setAttribute('stroke', line.color);\r\n\r\n            if (line.type === 'area' || line.type === 'bar') {\r\n                path.setAttribute('fill', line.color);\r\n            } else {\r\n                path.setAttribute('fill', 'none');\r\n            }\r\n\r\n            this.paths[line.id] = { path };\r\n        }\r\n    }\r\n\r\n    hiddenLines(props) {\r\n        props.lines.forEach((line) => {\r\n            const { path } = this.paths[line.id];\r\n            if (props.hiddenLines.indexOf(line.id) > -1) {\r\n                path.classList.add('--off');\r\n            } else {\r\n                path.classList.remove('--off');\r\n            }\r\n        });\r\n    }\r\n\r\n    updateScale(props) {\r\n        if ((props.hoveredIndex || props.hoveredIndex === 0) && props.lines[0].type === 'bar') {\r\n            this.svg.classList.add('--hover');\r\n        } else {\r\n            this.svg.classList.remove('--hover');\r\n        }\r\n\r\n        this.svg.setAttribute('width', props.chartWidth);\r\n\r\n        let scaleY = props.chartHeight / props.rangeMaxY;\r\n        const scaleX = props.width / props.chartWidth;\r\n\r\n        props.lines.forEach((line, index) => {\r\n            if (props.hiddenLines.indexOf(line.id) === -1) {\r\n                if (props.yScaled && index === props.lines.length - 1) {\r\n                    scaleY = props.chartHeight / props.yScaledRangeMaxY;\r\n                }\r\n\r\n                const { path } = this.paths[line.id];\r\n\r\n                path.setAttribute('d', line.path);\r\n                path.setAttribute('transform', `scale(${1 / scaleX},${scaleY * line.fixScaleY})`);\r\n            }\r\n        });\r\n    }\r\n\r\n    // updateViewBox(props) {\r\n    //     const startIndex = Math.floor(props.timeLine.length * props.startRange / 100);\r\n    //     const endIndex = Math.ceil(props.timeLine.length * props.endRange / 100);\r\n\r\n    //     let maxY = 0;\r\n    //     props.lines.forEach((line) => {\r\n    //         if (props.hiddenLines.indexOf(line.id) === -1) {\r\n    //             for (let i = startIndex; i <= endIndex; i += 1) {\r\n    //                 if (i >= 0 && i < line.column.length && maxY < line.column[i]) {\r\n    //                     maxY = line.column[i];\r\n    //                 }\r\n    //             }\r\n    //         }\r\n    //     });\r\n\r\n    //     const scaleY = maxY / this.maxY;\r\n    //     const viewBoxHeight = props.chartHeight * scaleY;\r\n\r\n    //     this.svg.setAttribute('width', props.chartWidth);\r\n\r\n    //     this.startValueTop = this.prevValueTop;\r\n    //     this.startValueHeight = this.prevValueHeight;\r\n    //     this.stepTop = (props.chartHeight - viewBoxHeight - this.prevValueTop) / 12;\r\n    //     this.stepHeight = (props.chartHeight * scaleY - this.prevValueHeight) / 12;\r\n    //     this.keyIndex += 1;\r\n\r\n\r\n    //     clearTimeout(this.timeout);\r\n    //     this.timeout = setTimeout(() => {\r\n    //         this.startAnimation(0, this.keyIndex, props);\r\n    //     }, 50);\r\n    // }\r\n\r\n    // startAnimation(index, key, props) {\r\n    //     if (this.keyIndex !== key || index > 11) {\r\n    //         return;\r\n    //     }\r\n\r\n    //     requestAnimationFrame(() => {\r\n    //         this.prevValueTop = this.startValueTop + this.stepTop * index;\r\n    //         this.prevValueHeight = this.startValueHeight + this.stepHeight * index;\r\n\r\n    //         this.svg.setAttribute('viewBox', `0 ${this.prevValueTop} ${props.width} ${this.prevValueHeight}`);\r\n    //         this.startAnimation(index + 1, key, props);\r\n    //     });\r\n    // }\r\n\r\n    update(newProps) {\r\n        if (newProps.zoomInit) {\r\n            this.render(newProps);\r\n        }\r\n\r\n        this.updateScale(newProps);\r\n        this.hiddenLines(newProps);\r\n    }\r\n\r\n    init(newProps) {\r\n        this.render(newProps);\r\n    }\r\n}\r\n","/* eslint-disable prefer-destructuring */\r\nimport { DomHelper } from './helpers';\r\n\r\nconst ARROW_ICON = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 21 21\"><g data-name=\"Group 1\"><path data-name=\"Rectangle 1\" fill=\"none\" d=\"M21 21H0V0h21z\"/><path data-name=\"Path 1\" d=\"M15.59 11.49l-8.6 8.6A1.4 1.4 0 1 1 5 18.11l7.6-7.61-7.6-7.6A1.4 1.4 0 0 1 6.99.9l8.6 8.6a1.4 1.4 0 0 1 0 1.98z\" fill=\"#D2D5D7\"/></g></svg>';\r\n\r\nconst STYLES = `\r\n    .tooltip {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 10px;\r\n        width: 140px;\r\n        box-shadow: 0px 0px 10px -3px rgba(0,0,0,0.75);\r\n        border-radius: 8px;\r\n        background-color:#fff;\r\n        opacity: 1;\r\n        transition: 0.2s opacity;\r\n        padding: 4px 10px;\r\n        font-size: 12px;\r\n        z-index: 1001;\r\n    }\r\n    .--night .tooltip {\r\n        background-color: #1C2533;\r\n        box-shadow: none;\r\n    }\r\n    .tooltip.--off {\r\n        opacity: 0;\r\n        pointer-events: none;\r\n    }\r\n    .tooltip-hover {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        border-left: 1px solid rgba(24, 45, 59, 0.1);\r\n        bottom: 35;\r\n        pointer-events: none;\r\n        opacity: 1;\r\n        transition: 0.2s opacity;\r\n    }\r\n    .--night .tooltip-hover {\r\n        border-left: 1px solid rgba(255, 255, 255, 0.1);\r\n    }\r\n    .tooltip-hover.--bar {\r\n        border: 0;\r\n    }\r\n    .tooltip-date {\r\n        font-weight: 600;\r\n        margin: 6px 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        pointer-events: none;\r\n    }\r\n    .tooltip-date > svg {\r\n        width: 12px;\r\n        height: 10px;\r\n    }\r\n    .tooltip-item {\r\n        display:flex;\r\n        margin: 6px 0;\r\n        justify-content: space-between;\r\n        pointer-events: none;\r\n    }\r\n    .tooltip-item > span {\r\n        display: flex;\r\n    }\r\n    .tooltip-item > span > span {\r\n        min-width: 25px;\r\n        text-align: right;\r\n        font-weight: 600;\r\n        margin-right: 7px;\r\n        display: block;\r\n    }\r\n    .tooltip-item > span.--all {\r\n        font-weight: 600;\r\n    }\r\n    .tooltip-hover.--off {\r\n        opacity: 0;\r\n    }\r\n    .hover-item {\r\n        background-color: #fff;\r\n        position: absolute;\r\n        bottom: 0;\r\n        width: 8px;\r\n        height: 8px;\r\n        pointer-events: none;\r\n        margin: 0 0 -6px -6px;\r\n        border-radius: 50%;\r\n        border: 2px solid;\r\n    }\r\n    .--night .hover-item {\r\n        background-color: #242F3E;\r\n    }\r\n    .hover-item.--area {\r\n        opacity: 1;\r\n    }\r\n    .hover-item.--bar {\r\n        left: -1px;\r\n        height: auto;\r\n        border-radius: 0;\r\n        border: 0;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport class Tooltip {\r\n    constructor(props, setProps) {\r\n        this.target = props.target;\r\n        this.props = props;\r\n        this.setProps = setProps;\r\n\r\n        DomHelper.style(props.shadow, STYLES);\r\n        this.tooltip = DomHelper.div('tooltip --off', props.target);\r\n\r\n        this.tooltip.onclick = event => this.clickTooltip(event);\r\n    }\r\n\r\n    render(props) {\r\n        this.target.addEventListener('mouseenter', event => this.mouseEnter(event));\r\n        this.target.addEventListener('mouseleave', event => this.mouseLeave(event));\r\n        this.target.addEventListener('mousemove', event => this.mouseMove(event));\r\n\r\n        this.target.addEventListener('touchmove', (event) => {\r\n            this.selectedIndex = null;\r\n            this.mouseMove(event);\r\n        });\r\n        this.target.addEventListener('touchend', (event) => {\r\n            this.mouseMove(event);\r\n            setTimeout(() => {\r\n                this.mouseClick(event);\r\n            });\r\n        });\r\n\r\n        this.target.addEventListener('click', event => this.mouseClick(event));\r\n        document.addEventListener('click', () => this.mouseLeave());\r\n\r\n        this.hover = DomHelper.div('tooltip-hover --off', this.target);\r\n        if (props.lines[0].type === 'bar') {\r\n            this.hover.classList.add('--bar');\r\n        }\r\n    }\r\n\r\n    clickTooltip(event) {\r\n        event.stopPropagation();\r\n\r\n        if (this.props.isZoomed) {\r\n            return;\r\n        }\r\n        \r\n        const zoomedIndex = this.selectedIndex;\r\n        this.selectedIndex = null;\r\n        this.setProps({ zoomedIndex });\r\n    }\r\n\r\n    mouseEnter() {\r\n        this.chartRect = this.target.getBoundingClientRect();\r\n    }\r\n\r\n    mouseLeave() {\r\n        this.selectedIndex = null;\r\n        this.setProps({ hoveredIndex: null });\r\n    }\r\n\r\n    mouseClick(event) {\r\n        event.stopPropagation();\r\n\r\n        if (this.props.hiddenLines.length === this.props.lines.length) {\r\n            return;\r\n        }\r\n\r\n        this.selectedIndex = this.props.hoveredIndex;\r\n        this.hoveredValue(this.props);\r\n    }\r\n\r\n    mouseMove(event) {\r\n        this.positions = [];\r\n\r\n        if (this.props.lines[0].type === 'bar') {\r\n            this.amount = this.props.timeLine.length;\r\n        } else {\r\n            this.amount = this.props.timeLine.length - 1;\r\n        }\r\n\r\n        const blockWidth = this.props.chartWidth / this.amount;\r\n        if (!this.chartRect) {\r\n            this.chartRect = this.target.getBoundingClientRect();\r\n        }\r\n\r\n        let clientX;\r\n        if (event && typeof event.clientX === 'number') {\r\n            clientX = event.clientX;\r\n        } else if (event && event.touches[0]) {\r\n            clientX = event.touches[0].clientX;\r\n        } else {\r\n            clientX = this.prevClientX;\r\n        }\r\n        clientX -= this.chartRect.left;\r\n\r\n        this.prevClientX = clientX;\r\n\r\n        let prev = -1;\r\n        let hoveredIndex;\r\n        for (let i = -1; i <= this.props.timeLine.length; i += 1) {\r\n            const position = i * blockWidth - this.props.left + this.props.chartIndent;\r\n            this.positions[i] = {\r\n                clientX,\r\n                position,\r\n            };\r\n            if (position > 0) {\r\n                if (prev < clientX && clientX < position) {\r\n                    if (Math.abs(prev - clientX) > (Math.abs(position - clientX))) {\r\n                        hoveredIndex = i;\r\n                    } else {\r\n                        hoveredIndex = i - 1;\r\n                    }\r\n                }\r\n                prev = position;\r\n            }\r\n        }\r\n\r\n        if (hoveredIndex < 0) {\r\n            hoveredIndex = 0;\r\n        }\r\n        if (hoveredIndex >= this.props.timeLine.length) {\r\n            hoveredIndex = this.props.timeLine.length - 1;\r\n        }\r\n\r\n        if (!event || this.props.hoveredIndex === hoveredIndex) {\r\n            return;\r\n        }\r\n\r\n        if (hoveredIndex || hoveredIndex === 0) {\r\n            this.setProps({ hoveredIndex });\r\n        } else {\r\n            this.setProps({ hoveredIndex: null });\r\n        }\r\n    }\r\n\r\n    hoveredValue(props) {\r\n        let index = props.hoveredIndex;\r\n        this.prevIndex = index;\r\n\r\n        if ((this.selectedIndex || this.selectedIndex === 0) && !props.isZoomed) {\r\n            index = this.selectedIndex;\r\n        }\r\n\r\n        if ((!index && index !== 0) || props.hiddenLines.length === props.lines.length || !this.positions[index]) {\r\n            this.hover.classList.add('--off');\r\n            this.tooltip.classList.add('--off');\r\n            return;\r\n        }\r\n\r\n        if (props.isZoomed || this.selectedIndex || this.selectedIndex === 0) {\r\n            this.tooltip.classList.remove('--off');\r\n        } else {\r\n            this.tooltip.classList.add('--off');\r\n        }\r\n\r\n        this.hover.classList.remove('--off');\r\n\r\n        if (this.positions[index].position > 200) {\r\n            this.tooltip.style.transform = `translateX(${this.positions[index].position - 160 - 17}px)`;\r\n        } else {\r\n            this.tooltip.style.transform = `translateX(${this.positions[index].position + 17}px)`;\r\n        }\r\n\r\n        this.tooltip.innerHTML = null;\r\n        const date = new Date(props.timeLine[index]);\r\n        let dateStr;\r\n        if (props.isZoomed) {\r\n            dateStr = `${date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`}:${date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`}`;\r\n        } else {\r\n            dateStr = `${props.daysLabels[date.getDay()].substring(0, 3)}, ${date.getDate()} ${props.monthsLabels[date.getMonth()].substring(0, 3)} ${date.getFullYear()}${ARROW_ICON}`;\r\n        }\r\n        DomHelper.div('tooltip-date', this.tooltip, dateStr);\r\n\r\n        for (let i = 0; i < props.lines.length; i += 1) {\r\n            let line = props.lines[i];\r\n            if (props.stacked || props.percentage) {\r\n                line = props.lines[props.lines.length - 1 - i];\r\n            }\r\n            if (props.hiddenLines.indexOf(line.id) === -1) {\r\n                let { name } = line;\r\n                if (props.percentage) {\r\n                    name = `<span>${Math.round(line.column[index] / props.allColumnData[index] * 100)}%</span>${name}`;\r\n                }\r\n\r\n                const item = DomHelper.div('tooltip-item', this.tooltip);\r\n                item.innerHTML = `<span>${name}</span><span style=\"color:${line.color}\">${line.column[index]}</span>`;\r\n            }\r\n        };\r\n\r\n        let scaleY = props.chartHeight / props.rangeMaxY;\r\n\r\n        this.hover.innerHTML = null;\r\n        this.hover.style.transform = `translateX(${this.positions[index].position}px)`;\r\n        let prevValue = 0;\r\n        const blockWidth = Math.ceil(props.chartWidth / this.amount) + 1;\r\n\r\n        props.lines.forEach((line, i) => {\r\n            if (props.yScaled && i === props.lines.length - 1) {\r\n                scaleY = props.chartHeight / props.yScaledRangeMaxY;\r\n            }\r\n\r\n            if (props.hiddenLines.indexOf(line.id) === -1) {\r\n                const hoverItem = DomHelper.div(`hover-item --${line.type}`, this.hover);\r\n                hoverItem.style.bottom = `${(prevValue + line.column[index]) * scaleY}px`;\r\n                hoverItem.style.borderColor = line.color;\r\n\r\n                if (line.type === 'bar') {\r\n                    hoverItem.style.top = `${props.chartHeight - (prevValue + line.column[index]) * scaleY}px`;\r\n                    hoverItem.style.bottom = 0;\r\n                    hoverItem.style.width = blockWidth;\r\n                    hoverItem.style.backgroundColor = line.color;\r\n                    hoverItem.style.zIndex = props.lines.length - i;\r\n                }\r\n\r\n                if (props.stacked) {\r\n                    prevValue += line.column[index];\r\n                }\r\n            }\r\n        });\r\n\r\n        if (props.stacked && !props.percentage) {\r\n            DomHelper.div('tooltip-item', this.tooltip, `<span>${'All'}</span><span class=\"--all\">${prevValue}</span>`);\r\n        }\r\n    }\r\n\r\n    update(newProps) {\r\n        if (newProps.zoomInit) {\r\n            this.tooltip.innerHTML = null;\r\n            this.hover.innerHTML = null;\r\n\r\n            this.positions = [];\r\n\r\n            this.props = newProps;\r\n            this.mouseMove();\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            this.hoveredValue(newProps);\r\n            this.props = newProps;\r\n        });\r\n    }\r\n\r\n    init(newProps) {\r\n        this.render(newProps);\r\n        this.props = newProps;\r\n    }\r\n}\r\n","import { DomHelper } from './helpers';\r\nimport { AxisX } from './axis-x';\r\nimport { AxisY } from './axis-y';\r\nimport { Lines } from './lines';\r\nimport { Tooltip } from './tooltip';\r\n\r\nconst STYLES = `\r\n    .chart-wrapper {\r\n        position: relative;\r\n        margin: 0 -16px;\r\n        cursor: pointer;\r\n    }\r\n    .svg-wrapper {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        will-change:transform;\r\n        pointer-events: none;\r\n    }\r\n    .message {\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        align-items: center;\r\n        justify-content: center;\r\n        opacity: 0;\r\n        display: none;\r\n        transition: 0.2s opacity;\r\n    }\r\n    .message.--on {\r\n        display: flex;\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport class ChartWrapper {\r\n    constructor(props, setProps) {\r\n        this.setProps = setProps;\r\n\r\n        DomHelper.style(props.shadow, STYLES);\r\n        this.chartWrapper = DomHelper.div('chart-wrapper', props.target);\r\n\r\n        this.render(props);\r\n    }\r\n\r\n    render(props) {\r\n        this.svgWrapper = DomHelper.div('svg-wrapper', this.chartWrapper);\r\n        this.message = DomHelper.div('message', this.chartWrapper, 'Please, choose at least the one line ¯\\\\_(ツ)_/¯');\r\n        this.lines = new Lines({ ...props, target: this.svgWrapper }, newState => this.setProps(newState));\r\n        this.axisX = new AxisX({ ...props, target: this.svgWrapper }, newState => this.setProps(newState));\r\n        this.axisY = new AxisY({ ...props, target: this.chartWrapper }, newState => this.setProps(newState));\r\n        this.axisYright = new AxisY({ ...props, target: this.chartWrapper }, newState => this.setProps(newState), true);\r\n        this.tooltip = new Tooltip({ ...props, target: this.chartWrapper }, newState => this.setProps(newState));\r\n    }\r\n\r\n    updatePosition(props) {\r\n        this.svgWrapper.style.transform = `translateX(${-props.left + 16}px) translate3d(0,0,0)`;\r\n    }\r\n\r\n    update(newProps) {\r\n        if (newProps.lines.length === newProps.hiddenLines.length) {\r\n            this.message.classList.add('--on');\r\n        } else {\r\n            this.message.classList.remove('--on');\r\n        }\r\n\r\n        this.axisYright.update(newProps);\r\n        this.axisY.update(newProps);\r\n        this.lines.update(newProps);\r\n        this.tooltip.update(newProps);\r\n        this.axisX.update(newProps);\r\n        this.updatePosition(newProps);\r\n    }\r\n\r\n    init(newProps) {\r\n        this.chartWrapper.style.height = `${newProps.chartHeight + 35}px`;\r\n        if (newProps.percentage) {\r\n            this.chartWrapper.style.marginTop = '15px';\r\n        }\r\n\r\n        this.axisY.init(newProps);\r\n        this.axisYright.init(newProps);\r\n        this.lines.init(newProps);\r\n        this.tooltip.init(newProps);\r\n        this.axisX.init(newProps);\r\n        this.updatePosition(newProps);\r\n    }\r\n}\r\n","import { DomHelper } from './helpers';\r\nimport { Header } from './header';\r\nimport { Loading } from './loading';\r\nimport { Switchers } from './switchers';\r\nimport { Navigator } from './navigator';\r\nimport { ChartWrapper } from './chart-wrapper';\r\n\r\nconst STYLES = `\r\n    .chart{\r\n        overflow: hidden;\r\n        font-family: 'Open Sans', sans-serif;\r\n        padding: 0 16px;\r\n        color: #000;\r\n        display: flex;\r\n        flex-direction: column;\r\n        position: relative;\r\n        -webkit-tap-highlight-color: rgba(0,0,0,0);\r\n        -webkit-tap-highlight-color: transparent;\r\n    }\r\n    .chart.--night {\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nclass SimpleChart extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            isZoomed: false,\r\n            timeLine: [],\r\n            startRange: 80,\r\n            endRange: 100,\r\n            chartIndent: 16,\r\n            isLoading: true,\r\n            lines: [],\r\n            hiddenLines: [],\r\n            daysLabels: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n            monthsLabels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n        };\r\n\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n\r\n        DomHelper.style(this.shadow, STYLES);\r\n        this.chart = DomHelper.div('chart', this.shadow);\r\n\r\n        this.render();\r\n    }\r\n\r\n    render() {\r\n        this.header = new Header({ shadow: this.shadow, target: this.chart, ...this.state }, newState => this.setState(newState));\r\n        this.chartWrapper = new ChartWrapper({ shadow: this.shadow, target: this.chart, ...this.state }, newState => this.setState(newState));\r\n        this.navigator = new Navigator({ shadow: this.shadow, target: this.chart, ...this.state }, newState => this.setState(newState));\r\n        this.switchers = new Switchers({ shadow: this.shadow, target: this.chart, ...this.state }, newState => this.setState(newState));\r\n        this.loading = new Loading({ shadow: this.shadow, target: this.chart, ...this.state }, newState => this.setState(newState));\r\n    }\r\n\r\n    createCache() {\r\n        if (this.state.maxCache) {\r\n            return;\r\n        }\r\n        this.state.maxCache = {};\r\n        this.state.lines.forEach((line) => {\r\n            const mapped = line.column.map((val, i) => ({ val, i }));\r\n            mapped.sort((a, b) => b.val - a.val);\r\n            this.state.maxCache[line.id] = mapped;\r\n        });\r\n    }\r\n\r\n    calculate() {\r\n        if (this.state.percentage || this.state.stacked) {\r\n            if (!this.allColumnDataCache) {\r\n                this.allColumnDataCache = {};\r\n            }\r\n\r\n            const key = `key${this.state.hiddenLines.sort().join('')}`;\r\n            if (!this.allColumnDataCache[key]) {\r\n                const allColumnData = [];\r\n                this.state.lines.forEach((line) => {\r\n                    if (this.state.hiddenLines.indexOf(line.id) === -1) {\r\n                        for (let i = 0; i < line.column.length; i += 1) {\r\n                            if (!allColumnData[i]) {\r\n                                allColumnData[i] = line.column[i];\r\n                            } else {\r\n                                allColumnData[i] += line.column[i];\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                this.allColumnDataCache[key] = allColumnData;\r\n            }\r\n\r\n            this.state.allColumnData = this.allColumnDataCache[key];\r\n        }\r\n\r\n        const startIndex = Math.floor(this.state.timeLine.length * this.state.startRange / 100);\r\n        const endIndex = Math.ceil(this.state.timeLine.length * this.state.endRange / 100);\r\n\r\n        let rangeMaxY = 0;\r\n        let allMaxY = [];\r\n\r\n        let yScaledRangeMaxY = 0;\r\n        let yScaledAllMaxY = 0;\r\n\r\n        if (this.state.stacked) {\r\n            allMaxY = 0;\r\n            for (let i = 0; i < this.state.allColumnData.length; i += 1) {\r\n                if (i >= startIndex && i <= endIndex && this.state.allColumnData[i] > rangeMaxY) {\r\n                    rangeMaxY = this.state.allColumnData[i];\r\n                }\r\n                if (this.state.allColumnData[i] > allMaxY) {\r\n                    allMaxY = this.state.allColumnData[i];\r\n                }\r\n            }\r\n        } else {\r\n            this.state.lines.forEach((line, index) => {\r\n                if (this.state.hiddenLines.indexOf(line.id) === -1) {\r\n                    const maxCacheLine = this.state.maxCache[line.id];\r\n\r\n                    if (this.state.yScaled && index === this.state.lines.length - 1) {\r\n                        yScaledAllMaxY = maxCacheLine[0].val;\r\n                        for (let i = 0; i < maxCacheLine.length; i += 1) {\r\n                            const item = maxCacheLine[i];\r\n                            if (item.i >= startIndex && item.i <= endIndex) {\r\n                                yScaledRangeMaxY = item.val;\r\n                                break;\r\n                            }\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    allMaxY.push(maxCacheLine[0].val);\r\n                    for (let i = 0; i < maxCacheLine.length; i += 1) {\r\n                        const item = maxCacheLine[i];\r\n                        if (item.val < rangeMaxY) {\r\n                            break;\r\n                        }\r\n\r\n                        if (item.i >= startIndex && item.i <= endIndex && rangeMaxY < item.val) {\r\n                            rangeMaxY = item.val;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        if (this.state.percentage) {\r\n            this.state.rangeMaxY = 1;\r\n            this.state.allMaxY = 1;\r\n        } else if (this.state.stacked) {\r\n            this.state.rangeMaxY = rangeMaxY;\r\n            this.state.allMaxY = allMaxY;\r\n        } else {\r\n            this.state.rangeMaxY = rangeMaxY;\r\n            this.state.allMaxY = Math.max(...allMaxY);\r\n        }\r\n\r\n        this.state.yScaledRangeMaxY = yScaledRangeMaxY;\r\n        this.state.yScaledAllMaxY = yScaledAllMaxY;\r\n    }\r\n\r\n    update(newState) {\r\n        const prevHiddenLines = this.state.hiddenLines;\r\n        this.state = { ...this.state, ...newState };\r\n        if (!this.inited) {\r\n            return;\r\n        }\r\n\r\n        this.createCache();\r\n        this.calculate();\r\n\r\n        if (((this.state.percentage || this.state.stacked) && prevHiddenLines.length !== this.state.hiddenLines.length) || this.state.zoomInit) {\r\n            this.prevColumnsData = [];\r\n            this.state.lines = this.state.lines.map((line) => {\r\n                if (this.state.hiddenLines.indexOf(line.id) === -1 || this.state.zoomInit) {\r\n                    return { ...line, ...this.generatePath(this.state, line) };\r\n                }\r\n                return line;\r\n            });\r\n        }\r\n\r\n        this.header.update(this.state);\r\n        this.chartWrapper.update(this.state);\r\n        this.navigator.update(this.state);\r\n        this.switchers.update(this.state);\r\n        this.loading.update(this.state);\r\n\r\n        this.state.zoomInit = false;\r\n    }\r\n\r\n    init(newState) {\r\n        this.state = { ...this.state, ...newState };\r\n\r\n        this.createCache();\r\n        this.calculate();\r\n\r\n        this.prevColumnsData = [];\r\n        this.state.lines = this.state.lines.map(line => ({ ...line, ...this.generatePath(this.state, line) }));\r\n\r\n        this.header.init(this.state);\r\n        this.chartWrapper.init(this.state);\r\n        this.navigator.init(this.state);\r\n        this.switchers.init(this.state);\r\n        this.loading.init(this.state);\r\n\r\n        this.inited = true;\r\n    }\r\n\r\n    setState(newState) {\r\n        if (this.state.isZoomed && newState.isZoomed === false) {\r\n            this.prevState.hideNavigator = this.state.hideNavigator;\r\n            if (!this.prevState.hideNavigator) {\r\n                this.prevState.hiddenLines = this.state.hiddenLines;\r\n            }\r\n\r\n            this.state = { ...this.prevState };\r\n            this.state.zoomedIndex = null;\r\n            this.state.isLoading = false;\r\n            this.allColumnDataCache = { ...this.prevAllColumnDataCache };\r\n\r\n            this.state.hideNavigator = false;\r\n            this.state.isZoomed = false;\r\n            this.state.zoomInit = true;\r\n        }\r\n        if (!this.state.isZoomed && newState.zoomedIndex && !this.state.percentage) {\r\n            const zoomedDate = new Date(this.state.timeLine[newState.zoomedIndex]);\r\n\r\n            let url = this.state.dataUrl;\r\n            url += `/${zoomedDate.getFullYear()}-`;\r\n            url += `${zoomedDate.getMonth() > 8 ? zoomedDate.getMonth() + 1 : `0${zoomedDate.getMonth() + 1}`}`;\r\n            url += `/${zoomedDate.getDate() > 9 ? zoomedDate.getDate() : `0${zoomedDate.getDate()}`}.json`;\r\n\r\n            fetch(url).then(response => response.json()).then((data) => {\r\n                this.prevState = { ...this.state };\r\n                this.prevAllColumnDataCache = { ...this.allColumnDataCache };\r\n                this.allColumnDataCache = null;\r\n\r\n                const newZoomedState = {\r\n                    maxCache: null,\r\n                    zoomInit: true,\r\n                    isZoomed: true,\r\n                    startRange: 100 / 7 * 3 - (6 * 100 / this.state.width),\r\n                    endRange: 100 / 7 * 4 - (8 * 100 / this.state.width),\r\n                    chartIndent: 16,\r\n                    isLoading: false,\r\n                    hiddenLines: this.state.hiddenLines,\r\n\r\n                    lines: [],\r\n                    width: this.state.width,\r\n                    height: this.state.height,\r\n                    yScaled: data.y_scaled,\r\n                    percentage: data.percentage,\r\n                    stacked: data.stacked,\r\n                    title: this.state.title,\r\n                    hoveredIndex: null,\r\n                };\r\n\r\n                data.columns.forEach((column) => {\r\n                    if (column[0] === 'x') {\r\n                        newZoomedState.timeLine = column;\r\n                        newZoomedState.timeLine.shift();\r\n                    } else {\r\n                        const id = newZoomedState.lines.length;\r\n                        newZoomedState.lines.push({\r\n                            id: column[0],\r\n                            color: data.colors[column[0]],\r\n                            name: data.names[column[0]],\r\n                            column,\r\n                            type: data.types[column[0]],\r\n                        });\r\n                        newZoomedState.lines[id].column.shift();\r\n                    }\r\n                });\r\n\r\n                newZoomedState.hideNavigator = this.prevState.lines.length !== newZoomedState.lines.length;\r\n                if (newZoomedState.hideNavigator) {\r\n                    newZoomedState.endRange = 100;\r\n                    newZoomedState.startRange = 0;\r\n                }\r\n                newZoomedState.scaleRange = (newZoomedState.endRange - newZoomedState.startRange) / 100;\r\n                newZoomedState.chartWidth = newZoomedState.width / newZoomedState.scaleRange;\r\n                newZoomedState.chartHeight = newZoomedState.height;\r\n                newZoomedState.left = newZoomedState.chartWidth * newZoomedState.startRange / 100;\r\n\r\n                this.update(newZoomedState);\r\n            });\r\n\r\n            // eslint-disable-next-line no-param-reassign\r\n            newState.isLoading = true;\r\n        }\r\n\r\n        this.update(newState);\r\n    }\r\n\r\n    generatePath(state, line) {\r\n        let scaleX;\r\n        if (line.type === 'bar') {\r\n            scaleX = state.width / state.timeLine.length;\r\n        } else {\r\n            scaleX = state.width / (state.timeLine.length - 1);\r\n        }\r\n\r\n        let fixScaleY = 1;\r\n        if (!(state.percentage || state.stacked)) {\r\n            if (line.column[0] > 1000000) {\r\n                fixScaleY = 1000000;\r\n            } else if (line.column[0] > 1000) {\r\n                fixScaleY = 1000;\r\n            }\r\n        }\r\n\r\n        let value = line.column[0] / fixScaleY;\r\n        if (state.percentage) {\r\n            value = line.column[0] / state.allColumnData[0];\r\n        }\r\n        if (state.stacked && this.prevColumnsData[0]) {\r\n            value += this.prevColumnsData[0];\r\n        }\r\n        this.prevColumnsData[0] = value;\r\n\r\n        let path = '';\r\n        if (line.type === 'area') {\r\n            path = `M0 0 L 0 ${value}`;\r\n        } else if (line.type === 'bar') {\r\n            path = `M0 0 L 0 ${value}`;\r\n        } else {\r\n            path = `M0 ${value}`;\r\n        }\r\n\r\n        for (let i = 1; i < line.column.length; i += 1) {\r\n            value = line.column[i] / fixScaleY;\r\n            if (state.percentage) {\r\n                value = line.column[i] / state.allColumnData[i];\r\n            }\r\n            if (state.stacked && this.prevColumnsData[i]) {\r\n                value += this.prevColumnsData[i];\r\n            }\r\n            this.prevColumnsData[i] = value;\r\n\r\n            if (line.type === 'bar') {\r\n                path += ` L ${i * scaleX} ${this.prevColumnsData[i - 1]} L ${i * scaleX} ${value}`;\r\n            } else {\r\n                path += ` L ${i * scaleX} ${value}`;\r\n            }\r\n        }\r\n\r\n        if (line.type === 'area' || line.type === 'bar') {\r\n            path += ` L ${line.column.length * scaleX} ${value}`;\r\n            path += ` L ${line.column.length * scaleX} 0`;\r\n        }\r\n\r\n        return { path, fixScaleY };\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['is-night'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'is-night') {\r\n            if (newValue === 'true') {\r\n                this.chart.classList.add('--night');\r\n            } else {\r\n                this.chart.classList.remove('--night');\r\n            }\r\n            this.state.isNight = newValue === 'true';\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        const dataUrl = this.getAttribute('url');\r\n        const width = parseInt(this.getAttribute('width'), 10);\r\n        const height = parseInt(this.getAttribute('height'), 10);\r\n        const title = this.getAttribute('title');\r\n        const isNight = this.getAttribute('is-night') === 'true';\r\n\r\n        fetch(`${dataUrl}/overview.json`).then(response => response.json()).then((data) => {\r\n            const newState = {\r\n                lines: [],\r\n                dataUrl,\r\n                width: width - this.state.chartIndent * 2,\r\n                height,\r\n                yScaled: data.y_scaled,\r\n                percentage: data.percentage,\r\n                stacked: data.stacked,\r\n                title,\r\n                isNight,\r\n            };\r\n\r\n            data.columns.forEach((column) => {\r\n                if (column[0] === 'x') {\r\n                    newState.timeLine = column;\r\n                    newState.timeLine.shift();\r\n                } else {\r\n                    const id = newState.lines.length;\r\n                    newState.lines.push({\r\n                        id: column[0],\r\n                        color: data.colors[column[0]],\r\n                        name: data.names[column[0]],\r\n                        column,\r\n                        type: data.types[column[0]],\r\n                    });\r\n                    newState.lines[id].column.shift();\r\n                }\r\n            });\r\n\r\n            newState.scaleRange = (this.state.endRange - this.state.startRange) / 100;\r\n            newState.chartWidth = newState.width / newState.scaleRange;\r\n            newState.chartHeight = newState.height;\r\n            newState.left = newState.chartWidth * this.state.startRange / 100;\r\n\r\n            this.init({ ...newState, isLoading: false });\r\n        });\r\n    }\r\n}\r\n\r\ncustomElements.define('simple-chart', SimpleChart);\r\n"]}